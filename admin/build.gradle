buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'nebula.integtest' version '8.2.0'
}

jar {
	//plain.jar 파일 생성되지 않도록 설정
	enabled = false

	manifest {
		attributes(
				'Implementation-Version': project.version
		)
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.jsoup:jsoup:1.15.3'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'mysql:mysql-connector-java:8.0.30'
	runtimeOnly 'com.h2database:h2'

	//querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//m1 mac netty lib
	if (System.getProperty("os.name") == "Mac OS X" && System.getProperty("os.arch") == "aarch64") {
		runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.94.Final:osx-aarch_64")
	}

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-jdbc'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'commons-beanutils:commons-beanutils:1.9.4'
	integTestImplementation "org.seleniumhq.selenium:htmlunit-driver"
}

springBoot {
	buildInfo()
}

test {
	// 테스트 결과의 상세한 정보를 출력
	testLogging {
		events "passed", "skipped", "failed"
	}
}


tasks.withType(Test).configureEach {
	useJUnitPlatform()
	outputs.upToDateWhen { false }
}


//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}
//querydsl 추가 끝